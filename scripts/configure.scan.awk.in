#!/usr/bin/awk -f

BEGIN {
	pkg_name = "hello-tools"
	pkg_version = 0.3
	pkg_bug_report_address = "https://github.com/TheSignPainter98/emblem-autotools/issues"
	config_headers = "src/config.h"

FUNC_CHECKS
}

/^AC_INIT/ {
	printf "AC_INIT([%s], [%s], [%s])\n", pkg_name, pkg_version, pkg_bug_report_address
	next
}

/^AC_PROG_CC/ {
	print "AC_PROG_CC([gcc])"
	next
}

/^AC_CONFIG_HEADERS/ {
	printf "AC_CONFIG_HEADERS([%s])\n", config_headers
	print "AM_INIT_AUTOMAKE([1.16 foreign subdir-objects dist-xz -Wgnu -Werror])"
	print "AC_PROG_LEX([noyywrap])"
	print "AC_PROG_YACC([bison])"
	print "AC_CONFIG_MACRO_DIRS([m4])"
	print "AM_CONDITIONAL([ANALYZER], [false])"
	print "AC_CONFIG_FILES([Makefile])"
	compgens("bash", "$datadir/bash-completion/completions")
	compgens("zsh", "$datadir/zsh/site-functions")
	compgens("fish", "$datadir/fish/vendor_completions.d")
	print "LT_INIT"

	# Perform libarry checks
	for (dep_name in func_checks)
	{
		printf "PKG_CHECK_MODULES([%s], [%s])\n", dep_name, dep_name
		printf "AC_CHECK_LIB([%s], [%s])\n", dep_name, func_checks[dep_name]
	}
	next
}

$2 == "FIXME:" {
	next
}

# /^AC_CHECK_LIB/ {
	# match($0, /(\[[^\]]*\])/) # Match the package name
	# dep_name_raw = substr($0, RSTART, RLENGTH)
	# match(dep_name_raw, /[^()]*/)
	# dep_name_raw = substr(dep_name_raw, RSTART, RLENGTH)
	# dep_name = substr(dep_name_raw, 2, length(dep_name_raw) - 2)

	# if (!(dep_name in func_checks)) {
		# printf "# FIXME: No check for library %s\n", dep_name
		# err = 1
	# }
	# printf "AC_CHECK_LIB([%s], [%s])\n", dep_name, func_checks[dep_name]
	# next
# }

1

END {
	exit err
}

func compgens(shell, default_loc) {
	SHELL = toupper(shell)
	printf "AC_ARG_WITH([%s-completion-dir],", shell
	printf "AS_HELP_STRING([--with-%s-completion-dir[=PATH]],\n", shell
	printf "	[Install the %s auto-completion script in this directory @<:@default=yes@:>@]), [],\n", shell
	printf "	[with_%s_completion_dir=yes])\n", shell
	printf "if test \"x$with_%s_completion_dir\" = \"xyes\"; then\n", shell
	printf "PKG_CHECK_MODULES([%s_COMPLETION], [%s-completion >= 2.0],\n", SHELL, shell
	printf "	[%s_COMPLETION_DIR=\"`pkg-config --variable=completionsdir %s-completion`\"],\n", SHELL, shell
	printf "	[%s_COMPLETION_DIR=\"%s\"])\n", SHELL, default_loc
	print "else"
	printf "	%s_COMPLETION_DIR=\"$with_%s_completion_dir\"\n", SHELL, shell
	print "fi"
	printf "AC_SUBST([%s_COMPLETION_DIR])\n", SHELL
	printf "AM_CONDITIONAL([ENABLE_%s_COMPLETION],[test \"x$with_%s_completion_dir\" != \"xno\"])\n", SHELL, shell
}
