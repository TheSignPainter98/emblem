use std::str::FromStr;
use crate::parser::{self, LexicalError, lexer};

grammar<'input>(input: &'input str);

pub File: &'input str = {
	Indented<Command>
};

Indented<T>: T = {
	Indent <Indented<T>> Dedent,
	T,
}

extern {
	type Location = parser::Location<'input>;
	type Error = LexicalError<'input>;

	enum lexer::Tok<'input> {
		Indent => lexer::Tok::Indent,
		Dedent => lexer::Tok::Dedent,
		":" => lexer::Tok::Colon,
		"::" => lexer::Tok::DoubleColon,
		"{" => lexer::Tok::LBrace,
		"}" => lexer::Tok::RBrace,
		Command => lexer::Tok::Command(<&'input str>),
		ParBreak => lexer::Tok::ParBreak,
		Word => lexer::Tok::Word(<&'input str>),
		Whitespace => lexer::Tok::Whitespace(<&'input str>),
		"/*" => lexer::Tok::NestedCommentOpen,
		"*/" => lexer::Tok::NestedCommentClose,
		"\n" => lexer::Tok::Newline,
		"//..." => lexer::Tok::Comment(<&'input str>),
	}
}
