name: Check code-quality

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  check-native:
    needs: check-wasm
    name: Check code-quality
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        rust: &rust-versions
          - 1.70.0
      fail-fast: true

    steps:
      - &checkout
        name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - &cache
        name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/env
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - &source
        name: Source cargo environment
        run: |
          [[ -f ~/.cargo/env ]] && source ~/.cargo/env || true

      - &install-rust
        name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: clippy, rustfmt

      - &cargo-check
        name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace

      - &cargo-fmt-check
        name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

      - &cargo-clippy
        name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --all-features -- -D warnings

      - &cargo-clippy-tests
        name: Run cargo clippy on tests
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --tests --workspace --all-features -- -D warnings

      - &cargo-test
        name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features

  check-wasm:
    name: Check WASM compatibility
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        rust:
          *rust-versions

    steps:
      - *checkout
      - *cache
      - *source
      - *install-rust

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build wasm
        run: wasm-pack build --target web --no-default-features
